
import java.awt.Color;
import java.awt.Font;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author saadghazal
 */
public class CheckBoxExc extends javax.swing.JFrame {

    /**
     * Creates new form CheckBoxExc
     */
    public CheckBoxExc() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TA = new javax.swing.JTextField();
        italicCheck = new javax.swing.JCheckBox();
        boldCheck = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        redRadio = new javax.swing.JRadioButton();
        greenRadio = new javax.swing.JRadioButton();
        blueRadio = new javax.swing.JRadioButton();
        blackRadio = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        italicCheck.setText("Italic");
        italicCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItalicCheckActionPerformed(evt);
            }
        });

        boldCheck.setText("Bold");
        boldCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BoldCheckActionPerformed(evt);
            }
        });

        jButton1.setText("Exit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitButtonPressed(evt);
            }
        });

        redRadio.setText("Red");
        redRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RedButtonActionPerformed(evt);
            }
        });

        greenRadio.setText("Green");
        greenRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GreenButtonActionPerformed(evt);
            }
        });

        blueRadio.setText("Blue");
        blueRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BlueButtonActionPerformed(evt);
            }
        });

        blackRadio.setText("Black");
        blackRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BlackButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(redRadio)
                        .addGap(18, 18, 18)
                        .addComponent(greenRadio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(blueRadio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(blackRadio))
                    .addComponent(TA, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(italicCheck)
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addComponent(boldCheck))))
                .addContainerGap(90, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(TA, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(italicCheck)
                    .addComponent(boldCheck))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(redRadio)
                    .addComponent(greenRadio)
                    .addComponent(blueRadio)
                    .addComponent(blackRadio))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(42, 42, 42))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ExitButtonPressed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitButtonPressed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_ExitButtonPressed

    private void BoldCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BoldCheckActionPerformed
        // TODO add your handling code here:
        if(boldCheck.isSelected() && italicCheck.isSelected()){
            TA.setFont(new Font(TA.getFont().getFamily(),Font.BOLD+Font.ITALIC,TA.getFont().getSize()));
//             italicCheck.setSelected(false);
        }else if(!boldCheck.isSelected() && italicCheck.isSelected()){
             TA.setFont(new Font(TA.getFont().getFamily(),Font.ITALIC,TA.getFont().getSize()));

        }else if(boldCheck.isSelected() && !italicCheck.isSelected())
        {
            TA.setFont(new Font(TA.getFont().getFamily(),Font.BOLD,TA.getFont().getSize()));
        }else{
             TA.setFont(new Font(TA.getFont().getFamily(),Font.PLAIN,TA.getFont().getSize()));

        }
        
    }//GEN-LAST:event_BoldCheckActionPerformed

    private void ItalicCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItalicCheckActionPerformed
        // TODO add your handling code here:
         if(boldCheck.isSelected() && italicCheck.isSelected()){
            TA.setFont(new Font(TA.getFont().getFamily(),Font.BOLD+Font.ITALIC,TA.getFont().getSize()));
//             italicCheck.setSelected(false);
        }else if(!boldCheck.isSelected() && italicCheck.isSelected()){
             TA.setFont(new Font(TA.getFont().getFamily(),Font.ITALIC,TA.getFont().getSize()));

        }else if(boldCheck.isSelected() && !italicCheck.isSelected())
        {
            TA.setFont(new Font(TA.getFont().getFamily(),Font.BOLD,TA.getFont().getSize()));
        }else{
             TA.setFont(new Font(TA.getFont().getFamily(),Font.PLAIN,TA.getFont().getSize()));

        }
        
    }//GEN-LAST:event_ItalicCheckActionPerformed

    private void RedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RedButtonActionPerformed
        // TODO add your handling code here:
        TA.setForeground(Color.red);
        blackRadio.setSelected(false);
        greenRadio.setSelected(false);
        blueRadio.setSelected(false);
    }//GEN-LAST:event_RedButtonActionPerformed

    private void GreenButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GreenButtonActionPerformed
        // TODO add your handling code here:
        TA.setForeground(Color.green);
        redRadio.setSelected(false);
        blackRadio.setSelected(false);
        blueRadio.setSelected(false);
    }//GEN-LAST:event_GreenButtonActionPerformed

    private void BlueButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BlueButtonActionPerformed
        // TODO add your handling code here:
        TA.setForeground(Color.blue);
        redRadio.setSelected(false);
        greenRadio.setSelected(false);
        blackRadio.setSelected(false);

    }//GEN-LAST:event_BlueButtonActionPerformed

    private void BlackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BlackButtonActionPerformed
        // TODO add your handling code here:
        TA.setForeground(Color.black);
        redRadio.setSelected(false);
        greenRadio.setSelected(false);
        blueRadio.setSelected(false);

    }//GEN-LAST:event_BlackButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CheckBoxExc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CheckBoxExc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CheckBoxExc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CheckBoxExc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CheckBoxExc().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField TA;
    private javax.swing.JRadioButton blackRadio;
    private javax.swing.JRadioButton blueRadio;
    private javax.swing.JCheckBox boldCheck;
    private javax.swing.JRadioButton greenRadio;
    private javax.swing.JCheckBox italicCheck;
    private javax.swing.JButton jButton1;
    private javax.swing.JRadioButton redRadio;
    // End of variables declaration//GEN-END:variables
}
